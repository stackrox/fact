name: Main CI

on:
  push:
    branches:
    - main
    - release-*
    tags:
    - '*'
  pull_request:

concurrency:
  # append event name on the off chance that a push to master
  # runs at the same time as the nightlies - we want both to run
  group: ${{ github.head_ref || github.run_id }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  basic:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        args:
          - build --release
          - clippy -- -D warnings
          - test
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libbpf-dev \
          protobuf-compiler
    - shell: python
      id: args
      run: |
        import os

        # Remove the hyphens from arguments like --release, then join
        # all words with hyphens to have a key that is valid for GHA
        # caching.
        args='${{ matrix.args }}'.replace('-', '').split()
        args='-'.join(args)
        with open(os.environ.get('GITHUB_OUTPUT'), 'a') as f:
          f.write(f'args={args}')

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ steps.args.outputs.args }}-${{ hashFiles('**/Cargo.lock') }}
    - run: cargo ${{ matrix.args }}

  container:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - run: make image
    - name: Login to quay.io/rhacs-eng
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
        password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
    - run: docker push "$(make image-name)"

  integration-tests:
    runs-on: ubuntu-24.04
    needs:
      - container
    steps:
    - uses: actions/checkout@v4
      with:
        path: fact
    - uses: actions/checkout@v4
      with:
        repository: stackrox/collector
        path: collector
        ref: mauro/fact/adjust-workflows
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Authenticate with GCP
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_COLLECTOR_CI_VM_SVC_ACCT }}'

    - name: Setup GCP
      uses: 'google-github-actions/setup-gcloud@v2'

    - uses: ./collector/.github/actions/setup-vm-creds
      with:
        gcp-ssh-key: ${{ secrets.GCP_SSH_KEY }}
        gcp-ssh-key-pub: ${{ secrets.GCP_SSH_KEY_PUB }}
        s390x-ssh-key: ${{ secrets.IBM_CLOUD_S390X_SSH_PRIVATE_KEY }}
        ppc64le-ssh-key: ${{ secrets.IBM_CLOUD_POWER_SSH_PRIVATE_KEY }}
        ppc64le-ssh-key-pub: ${{ secrets.IBM_CLOUD_POWER_SSH_PUBLIC_KEY }}
        s390x-key: ${{ secrets.IBM_CLOUD_S390x_API_KEY }}
        ppc64le-key: ${{ secrets.IBM_CLOUD_POWER_API_KEY }}
        redhat-username: ${{ secrets.REDHAT_USERNAME }}
        redhat-password: ${{ secrets.REDHAT_PASSWORD }}
        vm-type: fedora-coreos
        job-tag: ''
        workspace: ${{ github.workspace }}/collector

    - name: Create vars.yml
      env:
        FACT_VERSION: ${{ github.head_ref || github.ref_name }}
      run: |
        FACT_TAG="$(make -sC "${GITHUB_WORKSPACE}/fact")"
        cat << EOF > vars.yml
        ---
        job_id: ${JOB_ID}
        fact:
          tag: ${FACT_TAG}
          version: ${FACT_VERSION}
        quay:
          username: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
          password: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
        EOF

    - name: Create Test VMs
      run: |
        make -C "./collector/ansible" create-ci-vms

    - name: Run the tests
      run: |
        ansible-playbook \
          -i "${GITHUB_WORKSPACE}/collector/ansible/ci" \
          -e @vars.yml \
          "${GITHUB_WORKSPACE}/fact/ansible/run-tests.yml"

    - name: Teardown VMs
      if: always()
      run: |
        make -C "./collector/ansible" destroy-vms

    - name: Unarchive logs
      if: always()
      run: |
        cd "${GITHUB_WORKSPACE}/fact/tests"
        if [[ -f "logs.tar.gz" ]]; then
          tar xzf "logs.tar.gz"
          rm -f "logs.tar.gz"
        fi

    - name: Test summary
      uses: test-summary/action@v2
      if: always()
      with:
        paths: ${{ github.workspace }}/fact/tests/results.xml

    - name: Store artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          ${{ github.workspace }}/fact/tests/logs
          ${{ github.workspace }}/fact/tests/results.xml
        if-no-files-found: ignore
